version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_REGION=us-west-2
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "tests/test-requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r tests/test-requirements.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum  "tests/test-requirements.txt" }}
          paths:
            - "venv"      
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pytest tests
  deploy:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: dependencies

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install

      - run:
          name: check node_modules
          command: |
            sudo npm root -g
            sudo npm -g list
      - save_cache:
          key: dependencies
          paths:
            - node_modules    
        
      - run:
          name: Deploy application to dev
          command: sls deploy --verbose --stage dev --region us-west-2        
  test_post_deploy:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install
      - run:
          name: Invoke function recently deployed
          command: sls invoke --function daily-quote --stage dev --region us-west-2 --log 

workflows:
  version: 2
  test_deploy:
    jobs:
      # - test
      - deploy
      #     requires:
      #       - test
      # - test_post_deploy:
      #     requires:
      #       - deploy